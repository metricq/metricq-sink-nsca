{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "metricq-nsca-sink (passive check result reporter) configuration",
  "description": "Configuration describing which metrics to monitor and provide results for, based on their availability and value range",
  "type": "object",
  "definitions": {
      "resend_interval": {
          "type": "string",
          "pattern": "^\\s*([+-]?\\d*[.,]?\\d+)\\s*([^\\d]*)\\s*$",
          "description": "Minimum time interval at which a check should trigger reports, even if its overall state did not change.\nThis is useful for keeping the Centreon/Nagios host up-to-date and signaling that this passive check is not dead."
      }
  },
  "properties": {
    "reporting_host": {
      "type": "string",
      "description": "Name of the host for which check results are reported, as configured in Nagios/Centreon (defaults to the output of hostname(1))"
    },
    "nsca": {
      "type": "object",
      "description": "NSCA host settings",
      "properties": {
        "host": {
          "type": "string",
          "description": "Address of the NSCA daemon to which check results are sent (see `-H` flag of `send_nsca`)"
        },
        "port": {
          "type": "integer",
          "description": "Port of the NSCA daemon to which check results are sent (see `-p` flag of `send_nsca`)"
        },
        "executable": {
          "type": "string",
          "description": "Path of `send_nsca` executable to use for sending check results"
        },
        "config_file": {
          "type": "string",
          "description": "Path to `send_nsca` configuration file (see `-c` flag of `send_nsca`)"
        }
      }
    },
    "resend_interval": {
        "$ref": "#/definitions/resend_interval"
    },
    "checks": {
      "type": "object",
      "description": "Configuration for each value/timeout check, by Nagios/Centreon service name",
      "patternProperties": {
        "^[^\\t]$": {
          "type": "object",
          "description": "Passive check configuration",
          "properties": {
            "metrics": {
              "type": "array",
              "description": "List of metrics that should be monitored",
              "minItems": 1,
              "uniqueItems": true,
              "items": {
                "type": "string",
                "description": "Name of a MetricQ metric"
              }
            },
            "warning_below": {
              "type": "number",
              "description": "Send a check result of severity \"WARNING\" if the values sent by any monitored metric go below this threshold"
            },
            "warning_above": {
              "type": "number",
              "description": "Send a check result of severity \"WARNING\" if the values sent by any monitored metric go above this threshold"
            },
            "critical_below": {
              "type": "number",
              "description": "Send a check result of severity \"CRITICAL\" if the values sent by any monitored metric go below this threshold"
            },
            "critical_above": {
              "type": "number",
              "description": "Send a check result of severity \"CRITICAL\" if the values sent by any monitored metric go above this threshold"
            },
            "ignore": {
              "type": "array",
              "description": "A list of values considered \"OK\", ignored by critical_* and warning_* checks",
              "uniqueItems": true,
              "items": {
                "type": "number"
              }
            },
            "timeout": {
              "type": "string",
              "description": "Send check result of severity \"WARNING\" if no values arrive apart more than the specified period",
              "pattern": "^\\s*([+-]?\\d*[.,]?\\d+)\\s*([^\\d]*)\\s*$"
            },
            "resend_interval": {
                "$ref": "#/definitions/resend_interval"
            },
            "plugins": {
              "type": "object",
              "description": "A collection of plugin files to be loaded for this check",
              "patternProperties": {
                "[a-z_]+": {
                  "type": "object",
                  "description": "A plugin to load.\nPlugins are python files that expose a single entry point `get_plugin(name: str, config: dict, metric: Set[str]) -> metricq_sink_nsca.plugin.Plugin`.  It returns an initialized plugin instance.",
                  "properties": {
                    "file": {
                      "type": "string",
                      "description": "File system path to plugin implementation (.py file)"
                    },
                    "config": {
                      "type": "object",
                      "description": "Optional configuration data for this plugin"
                    }
                  },
                  "required": [
                    "file"
                  ]
                }
              }
            }
          },
          "required": [
            "metrics"
          ]
        }
      }
    }
  },
  "required": [
    "checks"
  ]
}
